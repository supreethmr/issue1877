{"ast":null,"code":"'use strict';\n\nvar _intlLoaders = require('intlLoaders');\n\nvar _intlLoaders2 = _interopRequireDefault(_intlLoaders);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar loadFallbackIntl = function loadFallbackIntl(localeContext) {\n  try {\n    _intlLoaders2.default['en']();\n\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('Locale data was not supplied for the ' + localeContext + '. Using en data as the fallback locale data.');\n    }\n  } catch (e) {\n    throw new Error('Locale data was not supplied for the ' + localeContext + ', or the en fallback locale.');\n  }\n};\n/* eslint-disable */\n\n\nvar loadIntl = function loadIntl(locale) {\n  var fallbackLocale = locale.split('-').length > 1 ? locale.split('-')[0] : false;\n\n  try {\n    _intlLoaders2.default[locale]();\n  } catch (e) {\n    if (fallbackLocale) {\n      try {\n        _intlLoaders2.default[fallbackLocale]();\n\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn('Locale data was not supplied for the ' + locale + ' locale. Using ' + fallbackLocale + ' data as the fallback locale data.');\n        }\n      } catch (e) {\n        var localeContext = locale + ' or ' + fallbackLocale + ' locales';\n        loadFallbackIntl(localeContext);\n      }\n    } else {\n      var _localeContext = locale + ' locale';\n\n      loadFallbackIntl(_localeContext);\n    }\n  }\n};\n\nmodule.exports = loadIntl;","map":null,"metadata":{},"sourceType":"script"}