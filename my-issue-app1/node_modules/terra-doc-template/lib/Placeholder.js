'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _bind = require('classnames/bind');

var _bind2 = _interopRequireDefault(_bind);

var _PlaceholderModule = require('./Placeholder.module.scss');

var _PlaceholderModule2 = _interopRequireDefault(_PlaceholderModule);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var cx = _bind2.default.bind(_PlaceholderModule2.default);

var propTypes = {
  /**
   * The themed variant of the text and border. Example, use the light variant when against a dark background.
   */
  variant: _propTypes2.default.oneOf(['light', 'dark']),
  /**
   * The placeholder text to be displayed.
   */
  title: _propTypes2.default.string
};

var defaultProps = {
  variant: 'dark',
  title: ''
};

var Placeholder = function Placeholder(_ref) {
  var variant = _ref.variant,
      title = _ref.title,
      customProps = _objectWithoutProperties(_ref, ['variant', 'title']);

  var placeholderClassNames = cx(['placeholder', customProps.className]);

  var innerClassNames = cx(['inner', 'is-' + variant]);

  return _react2.default.createElement(
    'div',
    _extends({}, customProps, { className: placeholderClassNames }),
    _react2.default.createElement(
      'div',
      { className: innerClassNames },
      _react2.default.createElement(
        'h2',
        null,
        title
      )
    )
  );
};

Placeholder.propTypes = propTypes;
Placeholder.defaultProps = defaultProps;

exports.default = Placeholder;